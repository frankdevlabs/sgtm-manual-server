name: ci

# Controls when the workflow will run
on:
  push:
    branches: [ feat/with-geo-headers ]

env:
  CONTAINER_NAME: caddy-geo-headers

defaults:
  run:
    shell: bash

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  bump-version:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}   # checkout the correct branch name
          fetch-depth: 0                # fetch the whole repo history

      # Runs a single command using the runners shell
      - name: Set Git Version
        # You may pin to the exact commit or the version.
        # uses: codacy/git-version@fa06788276d7492a2af01662649696d249ecf4cb
        uses: codacy/git-version@2.7.1
        id: set-git-version
        with:
          # The name of the release branch
          release-branch: feat/with-geo-headers
          major-identifier: major
          # The name of the dev branch
          #dev-branch: dev
          # The prefix to use in the version
          prefix: v

    outputs:
      version: ${{ steps.set-git-version.outputs.version }}

  create-tag:
    runs-on: ubuntu-latest
    needs: bump-version
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}   # checkout the correct branch name
          fetch-depth: 0                # fetch the whole repo history

      - name: Create tag
        # uses: https://github.com/marketplace/actions/github-script
        uses: actions/github-script@v6
        env:
          VERSION: "${{ needs.bump-version.outputs.version }}"
        with:
          github-token: ${{ github.token }}
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `refs/tags/${process.env.VERSION}`,
              sha: context.sha
            })
  docker:
    runs-on: ubuntu-latest
    needs: bump-version
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ env.CONTAINER_NAME }}:commit-${{ github.sha }}
            ghcr.io/${{ github.repository_owner }}/${{ env.CONTAINER_NAME }}:${{ needs.bump-version.outputs.version }}
            ghcr.io/${{ github.repository_owner }}/${{ env.CONTAINER_NAME }}:latest
          labels: |
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.description=${{ env.CONTAINER_NAME }}
            org.opencontainers.image.licenses=MIT
          cache-from: type=registry,ref=ghcr.io/${{ github.repository }}:latest
          cache-to: type=inline